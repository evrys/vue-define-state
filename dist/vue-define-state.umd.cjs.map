{"version":3,"file":"vue-define-state.umd.cjs","sources":["../src/defineState.ts"],"sourcesContent":["import { computed, reactive } from \"vue\"\n\n/**\n * A convenient wrapper for Vue's `reactive()`. \n * Creates a reactive copy of the original object, and also:\n *\n * - Makes all getters into computed values\n * - Binds \"this\" for all non-getter functions\n */\nexport function defineState<T extends object>(obj: T) {\n  const reactiveObj = reactive(obj)\n\n  // Make all getters into computed values\n  // See https://stackoverflow.com/questions/75357694/are-vue-3-reactive-object-getters-made-into-computed-values/75358517\n  // eslint-disable-next-line guard-for-in\n  for (const key in reactiveObj) {\n    const desc = Object.getOwnPropertyDescriptor(reactiveObj, key)\n    if (desc && desc.get) {\n      Object.defineProperty(obj, key, {\n        value: computed(desc.get.bind(reactiveObj))\n      })\n    }\n  }\n\n  // Bind \"this\" for all non-getter functions\n  // eslint-disable-next-line guard-for-in\n  for (const key in reactiveObj) {\n    const desc = Object.getOwnPropertyDescriptor(reactiveObj, key)\n    if (desc && !desc.get && typeof desc.value === 'function') {\n      Object.defineProperty(obj, key, {\n        value: desc.value.bind(reactiveObj)\n      })\n    }\n  }\n\n  return reactiveObj\n}"],"names":["defineState","obj","reactiveObj","reactive","key","desc","computed"],"mappings":"mQASO,SAASA,EAA8BC,EAAQ,CAC9C,MAAAC,EAAcC,WAASF,CAAG,EAKhC,UAAWG,KAAOF,EAAa,CAC7B,MAAMG,EAAO,OAAO,yBAAyBH,EAAaE,CAAG,EACzDC,GAAQA,EAAK,KACR,OAAA,eAAeJ,EAAKG,EAAK,CAC9B,MAAOE,EAAS,SAAAD,EAAK,IAAI,KAAKH,CAAW,CAAC,CAAA,CAC3C,CAEL,CAIA,UAAWE,KAAOF,EAAa,CAC7B,MAAMG,EAAO,OAAO,yBAAyBH,EAAaE,CAAG,EACzDC,GAAQ,CAACA,EAAK,KAAO,OAAOA,EAAK,OAAU,YACtC,OAAA,eAAeJ,EAAKG,EAAK,CAC9B,MAAOC,EAAK,MAAM,KAAKH,CAAW,CAAA,CACnC,CAEL,CAEO,OAAAA,CACT"}